.wrapper {
	display: flex;
	flex-direction: column;
}

.wrapper.is_align_start {
	align-items: flex-start;
}

.wrapper.is_align_center {
	align-items: center;
}

.wrapper.is_align_end {
	align-items: flex-end;
}

.wrapperMeasure {
	width: 100%;
	height: 0;
	visibility: hidden;
}

.main {}

.in {
	overflow: hidden;
	position: relative;
	width: var(--currentContentWidth);
	height: var(--currentContentHeight);
	transition-property: width, height;
	transition-duration: 0.3s;
}

.content_wrapper {
	position: absolute;
	top: 0;
	width: var(--wrapperMeasureWidth);
}

.wrapper.is_align_start .content_wrapper {
	left: 0;
}

.wrapper.is_align_center .content_wrapper {
	left: calc(50% - var(--wrapperMeasureWidth) / 2)
}

.wrapper.is_align_end .content_wrapper {
	right: 0;
}

.content {
	position: absolute;
	top: 0;
}

.wrapper.is_align_start .content {
	left: 0;
}

.wrapper.is_align_center .content {
	left: calc(50% - var(--contentWidth) / 2);
}

.wrapper.is_align_end .content {
	right: 0;
}

@keyframes fade-leave {
	to {
		opacity: 0;
	}
}

@keyframes fade-enter {
	from {
		opacity: 0;
	}
}

.content {
	animation-duration: 0.3s;
	animation-fill-mode: both;
}

.content.is_previous {
	animation-name: fade-leave;
}

.content.is_current {
	animation-name: fade-enter;
}

.transitionContainer {
	animation-duration: 0.3s;
	transform-origin: 50% 0;
}

.content.is_current .transitionContainer.is_transition_crossFade {}

.content.is_previous .transitionContainer.is_transition_crossFade {}

@keyframes swipeFromLeft-enter {
	from {
		transform: translateX(-6rem);
	}
}

@keyframes swipeFromLeft-leave {
	to {
		transform: translateX(6rem);
	}
}

.content.is_current .transitionContainer.is_transition_swipeFromLeft {
	animation-name: swipeFromLeft-enter;
}

.content.is_previous .transitionContainer.is_transition_swipeFromLeft {
	animation-name: swipeFromLeft-leave;
}

@keyframes swipeFromRight-enter {
	from {
		transform: translateX(6rem);
	}
}

@keyframes swipeFromRight-leave {
	to {
		transform: translateX(-6rem);
	}
}

.content.is_current .transitionContainer.is_transition_swipeFromRight {
	animation-name: swipeFromRight-enter;
}

.content.is_previous .transitionContainer.is_transition_swipeFromRight {
	animation-name: swipeFromRight-leave;
}

@keyframes swipeFromTop-enter {
	from {
		transform: translateY(-6rem);
	}
}

@keyframes swipeFromTop-leave {
	to {
		transform: translateY(6rem);
	}
}

.content.is_current .transitionContainer.is_transition_swipeFromTop {
	animation-name: swipeFromTop-enter;
}

.content.is_previous .transitionContainer.is_transition_swipeFromTop {
	animation-name: swipeFromTop-leave;
}

@keyframes swipeFromBottom-enter {
	from {
		transform: translateY(6rem);
	}
}

@keyframes swipeFromBottom-leave {
	to {
		transform: translateY(-6rem);
	}
}

.content.is_current .transitionContainer.is_transition_swipeFromBottom {
	animation-name: swipeFromBottom-enter;
}

.content.is_previous .transitionContainer.is_transition_swipeFromBottom {
	animation-name: swipeFromBottom-leave;
}

@keyframes grow-enter {
	from {
		transform: scale(0.8);
	}
}

@keyframes grow-leave {
	to {
		transform: scale(1.2);
	}
}

.content.is_current .transitionContainer.is_transition_grow {
	animation-name: grow-enter;
}

.content.is_previous .transitionContainer.is_transition_grow {
	animation-name: grow-leave;
}

@keyframes shrink-enter {
	from {
		transform: scale(1.2);
	}
}

@keyframes shrink-leave {
	to {
		transform: scale(0.5);
	}
}

.content.is_current .transitionContainer.is_transition_shrink {
	animation-name: shrink-enter;
}

.content.is_previous .transitionContainer.is_transition_shrink {
	animation-name: shrink-leave;
}

@media (prefers-reduced-motion) {
	.in {
		transition-timing-function: step-end;
		transition-duration: 1ms;
	}
	.content,
	.transitionContainer {
		animation-timing-function: step-end;
		animation-duration: 1ms;
	}
}
