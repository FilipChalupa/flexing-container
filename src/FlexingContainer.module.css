.wrapper {
	display: flex;
	flex-direction: column;
}

.wrapper.is_align_start {
	align-items: flex-start;
}

.wrapper.is_align_center {
	align-items: center;
}

.wrapper.is_align_end {
	align-items: flex-end;
}

.wrapperMeasure {
	width: 100%;
	height: 0;
	visibility: hidden;
}

.main {
}

.in {
	overflow: hidden;
	position: relative;
	width: var(--currentContentWidth);
	height: var(--currentContentHeight);
	transition-property: width, height;
	transition-duration: 0.3s;
}

.content_wrapper {
	position: absolute;
	top: 0;
	width: var(--wrapperMeasureWidth);
}

.wrapper.is_align_start .content_wrapper {
	left: 0;
}

.wrapper.is_align_center .content_wrapper {
	left: calc(50% - var(--wrapperMeasureWidth) / 2)
}

.wrapper.is_align_end .content_wrapper {
	right: 0;
}

.content {
	position: absolute;
	top: 0;
}

.wrapper.is_align_start .content {
	left: 0;
}

.wrapper.is_align_center .content {
	left: calc(50% - var(--contentWidth) / 2);
}

.wrapper.is_align_end .content {
	right: 0;
}

@keyframes fadeout {
	to {
		opacity: 0;
	}
}

@keyframes fadein {
	from {
		opacity: 0;
	}
}

.content {
	animation-duration: 0.3s;
	animation-fill-mode: both;

	/* useMeasure not working on zero sized element workaround */
	min-height: 1px;
	min-width: 2px;
	margin: -1px -1px 0;
	padding: 1px 1px 0
}

.content.is_previous {
	animation-name: fadeout;
}

.content.is_current {
	animation-name: fadein;
}

@media (prefers-reduced-motion) {
	.in {
		transition-timing-function: step-end;
		transition-duration: 1ms;
	}
	.content {
		animation-timing-function: step-end;
		animation-duration: 1ms;
	}
}
